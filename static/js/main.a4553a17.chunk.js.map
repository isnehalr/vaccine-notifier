{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","states","setStates","districts","setDistricts","isSelected","setIsSelected","stateName","setStateName","email","setEmail","isSubmitted","setIsSubmitted","districtId","setDistrictId","useEffect","getStates","a","fetch","method","headers","Accept","response","json","resData","getDistricts","id","url","handleSubmit","validator","isEmail","alert","data","fields","stringValue","phone","state","district_id","integerValue","body","JSON","stringify","className","Form","Group","controlId","Label","Control","as","onChange","e","target","value","state_id","filter","state_name","map","el","district","length","district_name","type","placeholder","Button","variant","onClick","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4553a17.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport validator from \"validator\";\nimport { Form, Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [states, setStates] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [isSelected, setIsSelected] = useState(false);\n  const [stateName, setStateName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [districtId, setDistrictId] = useState();\n\n  useEffect(() => {\n    getStates();\n  }, []);\n\n  const getStates = async () => {\n    const url = \"https://cdn-api.co-vin.in/api/v2/admin/location/states\";\n\n    const response = await fetch(url, {\n      method: \"GET\",\n      headers: { Accept: \"application/json; odata=verbose\" },\n    });\n\n    const resData = await response.json();\n\n    setStates(resData);\n  };\n\n  const getDistricts = async (id) => {\n    const url = `https://cdn-api.co-vin.in/api/v2/admin/location/districts/${id}`;\n\n    const response = await fetch(url, {\n      method: \"GET\",\n      headers: { Accept: \"application/json; odata=verbose\" },\n    });\n\n    const resData = await response.json();\n\n    setDistricts(resData);\n    setIsSelected(true);\n  };\n\n  const handleStatesChange = (e) => {\n    setStateName(e.target.value);\n    const state_id = states.states.filter(\n      (a) => a.state_name === e.target.value\n    )[0].state_id;\n    getDistricts(state_id);\n  };\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = async () => {\n    if (!validator.isEmail(email)) {\n      return alert(\"Please enter valida Email\");\n    }\n\n    const url = `https://firestore.googleapis.com/v1/projects/vaccine-notifier-a69d9/databases/(default)/documents/users`;\n\n    const data = {\n      fields: {\n        email: { stringValue: email },\n        phone: { stringValue: \"\" },\n        state: { stringValue: stateName },\n        district_id: { integerValue: districtId },\n      },\n    };\n\n    await fetch(url, {\n      method: \"POST\",\n      headers: { Accept: \"application/json; odata=verbose\" },\n      body: JSON.stringify(data),\n    });\n\n    setIsSubmitted(true);\n  };\n\n  const handleDistrictChange = (e) => {\n    const district =\n      districts.districts.length &&\n      districts.districts.filter((el) => el.district_name === e.target.value);\n    const districtId = district.length && district[0][\"district_id\"];\n\n    setDistrictId(districtId);\n  };\n\n  return (\n    <div className=\"App\">\n      <h2 className=\"head-style\"> Vaccine Notifier </h2>\n      <header className=\"App-header\">\n        {!isSubmitted && (\n          <Form className=\"col-sm-3 card\">\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>State</Form.Label>\n              <Form.Control as=\"select\" onChange={handleStatesChange}>\n                {states.states &&\n                  states.states.map((el) => <option> {el.state_name} </option>)}\n              </Form.Control>\n            </Form.Group>\n            {isSelected && (\n              <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                <Form.Label>District</Form.Label>\n                <Form.Control as=\"select\" onChange={handleDistrictChange}>\n                  {districts.districts &&\n                    districts.districts.map((el) => (\n                      <option> {el.district_name} </option>\n                    ))}\n                </Form.Control>\n              </Form.Group>\n            )}\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                onChange={handleEmailChange}\n                value={email}\n              />\n              <label className=\"error\">\n                {!validator.isEmail(email) && \"Please enter valid Email \"}\n              </label>\n            </Form.Group>\n            <br />\n            <Button variant=\"secondary\" onClick={handleSubmit}>\n              Notify Me\n            </Button>\n          </Form>\n        )}\n\n        {isSubmitted && (\n          <label>\n            Thanks for using this facility! You will be notified once vaccine is\n            available in your area.\n          </label>\n        )}\n      </header>\n      <footer className=\"footer\">\n        Disclaimer: This site uses public APIs provided by cowin. We are not\n        responsible for, any damages or any kind of legal issues arising out of\n        use, reference to, or reliance on any information contained within this\n        website. <br />\n        <i> Developed and maintained by : </i>\n        {\"  \"}\n        <a href=\"https://www.linkedin.com/in/isnehalr\">\n          {\" \"}\n          <strong> Snehal </strong>{\" \"}\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}